---
# post process for instance 
# written by bodhi wang
# jyxz5@qq.com
# Apr 8, 2018
# 
- hosts: elk.xxx.com
  become: yes
  become_user: root

  vars:
    RESET_PASSWD: "NO"
    GEN_PKI: "NO"

  tasks:
  - name: Update the system to the latest
    command: yum update -y
    args:
      warn: no
    tags:
      - system

  - name: Set timezone as Asia/Shanghai
    command: timedatectl set-timezone Asia/Shanghai
    tags:
      - system

  - name: Generate root/centos password
    shell: |
           openssl rand -hex 10|awk '{print "root:"$1}'
           openssl rand -hex 10|awk '{print "centos:"$1}'
    register: password
    args:
      warn: no
    when: RESET_PASSWD is defined and RESET_PASSWD == "YES"
    tags:
      - system

  - name: Show register variable
    debug:
      var: password.stdout
    when: RESET_PASSWD is defined and RESET_PASSWD == "YES"
    tags:
      - system

  - name: Modify password of user root and centos
    shell: echo -e "{{password.stdout}}" | chpasswd
    when: RESET_PASSWD is defined and RESET_PASSWD == "YES"
    tags:
      - system

  - name: Modify /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PasswordAuthentication yes'
      insertafter: "^#PasswordAuthentication yes"
      line: 'PasswordAuthentication yes'
    tags:
      - system
    
  - name: Restart sshd service
    service:
      name: "{{item}}"
      state: restarted
    with_items:
      - sshd
    tags:
      - system

  - name: Disable SELinux (/etc/selinux/config)
    selinux:
      state: disabled
    register: result
    tags:
      - system

  - name: Show the result of disabling SELinux
    debug:
      var: result
    tags:
      - system

  - name: Set enforce of SELinux as 0
    command: setenforce 0
    #args:
    #  warn: no
    tags:
      - system

  - name: Install epel-release.
    yum:
      name: "{{item}}"
      state: present
    with_items:
      - epel-release
    tags:
      - system

  - name: Install openjdk.
    yum:
      name: "{{item}}"
      state: present
    with_items:
      - java-1.8.0-openjdk
    tags:
      - basic

  - name: Install public signing key of elastic.
    rpm_key: 
      key: "{{item}}"
      state: present
    with_items:
      - https://packages.elastic.co/GPG-KEY-elasticsearch
    tags:
      - elk

  - name: Add repository elastic-6.x
    yum_repository:
      name: elastic-6.x
      description: Elastic repository for 6.x packages
      baseurl: https://artifacts.elastic.co/packages/6.x/yum
      gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch
      gpgcheck: yes
      #repo_gpgcheck: yes
      enabled: yes
    tags:
      - elk

  - name: Install ELK.
    yum:
      name: "{{item}}"
      state: present
    with_items:
      - logstash
      - elasticsearch
      - kibana
    tags:
      - elk

  - name: Enable ELK to start automatically during boot.
    systemd:
      name: "{{item}}"
      enabled: yes
      masked: no
    with_items:
      - logstash
      - elasticsearch
      - kibana
    tags:
      - elk

  - name: Modify /etc/elasticsearch/elasticsearch.yml
    lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regexp: '^network.host:'
      insertafter: "^#network.host:"
      line: 'network.host: localhost'
    tags:
      - elk
    
  - name: Modify /etc/kibana/kibana.yml
    lineinfile:
      path: /etc/kibana/kibana.yml
      regexp: '^server.host: '
      insertafter: "^#server.host: "
      line: 'server.host: "0.0.0.0"'
    tags:
      - elk
    
  - name: Generate PKI key-pair for filebeat to connect logstash server.
    command: 
      openssl req -subj '/CN=elk.xxx.com/' -x509 -days 3650 \
              -batch -nodes -newkey rsa:2048 \
              -keyout private/logstash-forwarder.key \
              -out certs/logstash-forwarder.crt
    args:
      chdir: /etc/pki/tls
    when: GEN_PKI is defined and GEN_PKI == "YES"
    tags:
      - elk

  - name: Generate input configuration file for logstash
    blockinfile:
      path: /etc/logstash/conf.d/02-beats-input.conf
      create: yes
      block: |
        input {
          beats {
            port => 5044
            ssl => true
            ssl_certificate => "/etc/pki/tls/certs/logstash-forwarder.crt"
            ssl_key => "/etc/pki/tls/private/logstash-forwarder.key"
          }
        }
    tags:
      - elk

  - name: Generate filter configuration file for logstash
    blockinfile:
      path: /etc/logstash/conf.d/10-syslog-filter.conf
      create: yes
      block: |
        filter {
          if [type] == "syslog" {
            grok {
              match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
              add_field => [ "received_at", "%{@timestamp}" ]
              add_field => [ "received_from", "%{host}" ]
            }
            syslog_pri { }
            date {
              match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
            }
          }
        }
    tags:
      - elk

  - name: Generate output configuration file for logstash
    blockinfile:
      path: /etc/logstash/conf.d/30-elasticsearch-output.conf
      create: yes
      block: |
        output {
          elasticsearch {
            hosts => ["localhost:9200"]
            sniffing => true
            manage_template => false
            index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
            document_type => "%{[@metadata][type]}"
          }
        }
    tags:
      - elk
  
  - name: Copy public key file from elk host
    fetch:
      dest: ./
      src: /etc/pki/tls/certs/logstash-forwarder.crt
      flat: yes
    tags:
      - elk

  - name: Copy public key file to nginx host
    copy:
      src: logstash-forwarder.crt
      dest: /etc/pki/tls/certs/logstash-forwarder.crt
      owner: root
      group: root
      mode: 0644
      force: yes
    delegate_to: "{{item}}"
    with_items:
      - nginx.xxx.com
      - controller.xxx.com
    tags:
      - elkcrt

  - name: Restart ELK service
    service:
      name: "{{item}}"
      state: restarted
    with_items:
      - elasticsearch
      - kibana
      - logstash
    tags:
      - elk

  
